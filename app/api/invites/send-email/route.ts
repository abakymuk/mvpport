import { NextRequest, NextResponse } from 'next/server';
import { createClient } from '@/lib/supabase/server';

export async function POST(request: NextRequest) {
  try {
    const supabase = await createClient();

    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const {
      data: { user },
      error: userError,
    } = await supabase.auth.getUser();
    if (userError || !user) {
      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });
    }

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    const body = await request.json();
    const { inviteId } = body;

    if (!inviteId) {
      return NextResponse.json(
        { error: 'Invite ID is required' },
        { status: 400 }
      );
    }

    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏
    const { data: invite, error: inviteError } = await supabase
      .from('invites')
      .select(
        `
        *,
        org:orgs(name)
      `
      )
      .eq('id', inviteId)
      .single();

    if (inviteError || !invite) {
      return NextResponse.json({ error: 'Invite not found' }, { status: 404 });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    const { data: membership } = await supabase
      .from('memberships')
      .select('role')
      .eq('user_id', user.id)
      .eq('org_id', invite.org_id)
      .single();

    if (!membership || !['ADMIN', 'OWNER'].includes(membership.role)) {
      return NextResponse.json(
        { error: 'Insufficient permissions' },
        { status: 403 }
      );
    }

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º URL –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
    const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || 'http://localhost:3000';
    const inviteUrl = `${siteUrl}/invite?token=${invite.token}`;

    // Email —à–∞–±–ª–æ–Ω
    const emailContent = {
      to: invite.email,
      subject: `–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é ${invite.org.name}`,
      html: `
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é</title>
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px; }
            .button { display: inline-block; background: #007bff; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; margin: 20px 0; }
            .footer { margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee; font-size: 14px; color: #666; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>üéâ –í–∞—Å –ø—Ä–∏–≥–ª–∞—à–∞—é—Ç –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é!</h1>
            </div>
            
            <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!</p>
            
            <p>–í–∞—Å –ø—Ä–∏–≥–ª–∞—à–∞—é—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ <strong>${invite.org.name}</strong> –≤ –∫–∞—á–µ—Å—Ç–≤–µ <strong>${getRoleLabel(invite.role)}</strong>.</p>
            
            <p>–î–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:</p>
            
            <a href="${inviteUrl}" class="button">–ü—Ä–∏–Ω—è—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ</a>
            
            <p>–ò–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä:</p>
            <p><a href="${inviteUrl}">${inviteUrl}</a></p>
            
            <p><strong>–í–∞–∂–Ω–æ:</strong> –≠—Ç–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –¥–æ ${new Date(invite.expires_at).toLocaleDateString('ru-RU')}.</p>
            
            <div class="footer">
              <p>–ï—Å–ª–∏ –≤—ã –Ω–µ –æ–∂–∏–¥–∞–ª–∏ —ç—Ç–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.</p>
              <p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ ${invite.org.name}</p>
            </div>
          </div>
        </body>
        </html>
      `,
      text: `
–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é ${invite.org.name}

–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!

–í–∞—Å –ø—Ä–∏–≥–ª–∞—à–∞—é—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ ${invite.org.name} –≤ –∫–∞—á–µ—Å—Ç–≤–µ ${getRoleLabel(invite.role)}.

–î–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:
${inviteUrl}

–í–∞–∂–Ω–æ: –≠—Ç–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –¥–æ ${new Date(invite.expires_at).toLocaleDateString('ru-RU')}.

–ï—Å–ª–∏ –≤—ã –Ω–µ –æ–∂–∏–¥–∞–ª–∏ —ç—Ç–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ ${invite.org.name}
      `,
    };

    // –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å –≤–Ω–µ—à–Ω–∏–º email —Å–µ—Ä–≤–∏—Å–æ–º
    // –ù–∞–ø—Ä–∏–º–µ—Ä: SendGrid, Resend, –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å Supabase SMTP
    console.log('Email content for invite:', {
      to: invite.email,
      subject: emailContent.subject,
      inviteUrl,
    });

    // –ü–æ–∫–∞ —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º URL –¥–ª—è —Ä—É—á–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
    return NextResponse.json({
      message: 'Invite created successfully',
      inviteUrl,
      email: invite.email,
      note: 'Email integration needs to be configured for production',
    });
  } catch (error) {
    console.error('POST /api/invites/send-email - Error:', error);
    return NextResponse.json(
      {
        error: 'Internal server error',
        details: error instanceof Error ? error.message : 'Unknown error',
      },
      { status: 500 }
    );
  }
}

function getRoleLabel(role: string): string {
  switch (role) {
    case 'ADMIN':
      return '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞';
    case 'MEMBER':
      return '–£—á–∞—Å—Ç–Ω–∏–∫–∞';
    case 'VIEWER':
      return '–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—è';
    default:
      return role;
  }
}
