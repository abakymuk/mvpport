import { serve } from 'https://deno.land/std@0.168.0/http/server.ts';
import { createClient } from 'https://esm.sh/@supabase/supabase-js@2';

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers':
    'authorization, x-client-info, apikey, content-type',
};

serve(async (req) => {
  // Handle CORS preflight requests
  if (req.method === 'OPTIONS') {
    return new Response('ok', { headers: corsHeaders });
  }

  try {
    // Create a Supabase client with the Auth context of the function
    const supabaseClient = createClient(
      Deno.env.get('SUPABASE_URL') ?? '',
      Deno.env.get('SUPABASE_ANON_KEY') ?? '',
      {
        global: {
          headers: { Authorization: req.headers.get('Authorization')! },
        },
      }
    );

    // Get the request body
    const { inviteId } = await req.json();

    if (!inviteId) {
      throw new Error('Invite ID is required');
    }

    // Get invite information
    const { data: invite, error: inviteError } = await supabaseClient
      .from('invites')
      .select(
        `
        *,
        org:orgs(name)
      `
      )
      .eq('id', inviteId)
      .single();

    if (inviteError || !invite) {
      throw new Error('Invite not found');
    }

    // Generate invite URL
    const inviteUrl = `${Deno.env.get('SITE_URL')}/invite?token=${invite.token}`;

    // Email template
    const emailContent = {
      to: invite.email,
      subject: `–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é ${invite.org.name}`,
      html: `
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é</title>
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px; }
            .button { display: inline-block; background: #007bff; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; margin: 20px 0; }
            .footer { margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee; font-size: 14px; color: #666; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>üéâ –í–∞—Å –ø—Ä–∏–≥–ª–∞—à–∞—é—Ç –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é!</h1>
            </div>
            
            <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!</p>
            
            <p>–í–∞—Å –ø—Ä–∏–≥–ª–∞—à–∞—é—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ <strong>${invite.org.name}</strong> –≤ –∫–∞—á–µ—Å—Ç–≤–µ <strong>${getRoleLabel(invite.role)}</strong>.</p>
            
            <p>–î–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:</p>
            
            <a href="${inviteUrl}" class="button">–ü—Ä–∏–Ω—è—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ</a>
            
            <p>–ò–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä:</p>
            <p><a href="${inviteUrl}">${inviteUrl}</a></p>
            
            <p><strong>–í–∞–∂–Ω–æ:</strong> –≠—Ç–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –¥–æ ${new Date(invite.expires_at).toLocaleDateString('ru-RU')}.</p>
            
            <div class="footer">
              <p>–ï—Å–ª–∏ –≤—ã –Ω–µ –æ–∂–∏–¥–∞–ª–∏ —ç—Ç–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.</p>
              <p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ ${invite.org.name}</p>
            </div>
          </div>
        </body>
        </html>
      `,
      text: `
–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é ${invite.org.name}

–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!

–í–∞—Å –ø—Ä–∏–≥–ª–∞—à–∞—é—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ ${invite.org.name} –≤ –∫–∞—á–µ—Å—Ç–≤–µ ${getRoleLabel(invite.role)}.

–î–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:
${inviteUrl}

–í–∞–∂–Ω–æ: –≠—Ç–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –¥–æ ${new Date(invite.expires_at).toLocaleDateString('ru-RU')}.

–ï—Å–ª–∏ –≤—ã –Ω–µ –æ–∂–∏–¥–∞–ª–∏ —ç—Ç–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ ${invite.org.name}
      `,
    };

    // Send email using Supabase SMTP
    const { error: emailError } =
      await supabaseClient.auth.admin.sendRawEmail(emailContent);

    if (emailError) {
      throw emailError;
    }

    return new Response(
      JSON.stringify({ message: 'Email sent successfully' }),
      {
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
        status: 200,
      }
    );
  } catch (error) {
    console.error('Error sending invite email:', error);

    return new Response(JSON.stringify({ error: error.message }), {
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
      status: 400,
    });
  }
});

function getRoleLabel(role: string): string {
  switch (role) {
    case 'ADMIN':
      return '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞';
    case 'MEMBER':
      return '–£—á–∞—Å—Ç–Ω–∏–∫–∞';
    case 'VIEWER':
      return '–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—è';
    default:
      return role;
  }
}
