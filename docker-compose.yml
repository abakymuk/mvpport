services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: mvpport-web
    command: pnpm dev
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      - NEXT_PUBLIC_APP_NAME=MVP Port
      # Database
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/app_db
      # Supabase (optional)
      - SUPABASE_URL=${SUPABASE_URL:-}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY:-}
      # Sentry (optional)
      - SENTRY_DSN=${SENTRY_DSN:-}
      # Email (Mailhog)
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      db:
        condition: service_healthy
      mailhog:
        condition: service_started
    restart: unless-stopped
    networks:
      - mvpport-network

  db:
    image: postgres:15-alpine
    container_name: mvpport-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app_db
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --lc-collate=C --lc-ctype=C'
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./supabase/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d app_db']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - mvpport-network

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mvpport-mailhog
    ports:
      - '8025:8025' # Web UI
      - '1025:1025' # SMTP
    environment:
      - MH_STORAGE=memory
      - MH_HOSTNAME=mailhog
    restart: unless-stopped
    networks:
      - mvpport-network

volumes:
  postgres_data:
    driver: local

networks:
  mvpport-network:
    driver: bridge
